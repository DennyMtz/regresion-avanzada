d <- (input[ which(input$NIVEL.DE.ESTUDIOS=='4. EST TEC'), ])
mean(d$IMPORTE.PAGADO.DE.ENERO.A.MARZO.20161) #97551.75
nivel <- unique(input$NIVEL.DE.ESTUDIOS)
nivel
importe_promedio <- data.frame()
#IMPORTE PROMEDIO EN CADA NIVEL DE ESTUDIOS
nivel <- unique(input$NIVEL.DE.ESTUDIOS)
importe_promedio <- data.frame()
for(i in 1:length(nivel)){
a <- (input[ which(input$NIVEL.DE.ESTUDIOS==nivel[[i]]), ])
b <- mean(a$IMPORTE.PAGADO.DE.ENERO.A.MARZO.20161)
importe_promedio <- rbind(b)
}
importe_promedio
nivel <- unique(input$NIVEL.DE.ESTUDIOS)
importe_promedio <- data.frame()
for(i in 1:length(nivel)){
a <- (input[ which(input$NIVEL.DE.ESTUDIOS==nivel[[i]]), ])
b <- mean(a$IMPORTE.PAGADO.DE.ENERO.A.MARZO.20161)
importe_promedio <- rbind(importe_promedio,b)
}
importe_promedio
importe_promedio <- cbind(nivel,importe_promedio)
#IMPORTE PROMEDIO EN CADA NIVEL DE ESTUDIOS
nivel <- unique(input$NIVEL.DE.ESTUDIOS)
importe_promedio <- data.frame()
for(i in 1:length(nivel)){
a <- (input[ which(input$NIVEL.DE.ESTUDIOS==nivel[[i]]), ])
b <- mean(a$IMPORTE.PAGADO.DE.ENERO.A.MARZO.20161)
importe_promedio <- rbind(importe_promedio,b)
}
importe_promedio <- cbind(nivel,importe_promedio)
colnames(importe_promedio)[2] <- "importe_pagado"
print(importe_promedio)
names(input)
anios <- unique(input$anio_inicio)
anios
library(lubridate)
library(dplyr)
library(ggplot2)
dtype <- c("character","character","character","character","character","character","character","character","character","character","numeric")
input <- read.csv("/home/denny/proyectos/fuga_de_cerebros/data/base_2010_2016.csv", colClasses =dtype)
#write.table(input,"/home/denny/proyectos/fuga_de_cerebros/base_nueva.txt",sep="\t",row.names=FALSE, col.names = FALSE)
dtype <- c("character","numeric", "numeric", "character")
codes <- read.csv("/home/denny/proyectos/fuga_de_cerebros/data/codigos_paises.csv", colClasses =dtype)
#PAIS
base_pais <- input %>% select(PAÍS,INSTITUCIÓN,NIVEL.DE.ESTUDIOS) %>% group_by(PAÍS) %>% summarize(numero=n())
base_pais <- base_pais[order(-base_pais$numero),]
base_pais$porcentaje <- round(base_pais$numero/sum(base_pais$numero)*100,1)
print(sum(base_pais$porcentaje))
base_pais2 <- head(base_pais,10)
rbind(base_pais2,c("OTROS",(sum(base_pais$numero)-sum(base_pais2$numero)),(100-sum(base_pais2$porcentaje))))
#PORCENTAJE DE BECARIOS POR INSTITUCION
base_inst <- input %>% select(PAÍS,INSTITUCIÓN,NIVEL.DE.ESTUDIOS) %>% group_by(INSTITUCIÓN) %>% summarize(numero=n())
base_inst <- base_inst[order(-base_inst$numero),]
base_inst$porcentaje <- round(base_inst$numero/sum(base_inst$numero)*100,1)
#sum(base_inst$porcentaje)
base_inst2 <- head(base_inst,10)
rbind(base_inst2,c("OTRAS",(sum(base_inst$numero)-sum(base_inst2$numero)),(100-sum(base_inst2$porcentaje))))
#PORCENTAJE DE BECARIOS POR PROGRAMA
base_prog <- input %>% select(PAÍS,INSTITUCIÓN,NIVEL.DE.ESTUDIOS, PROGRAMA.DE.ESTUDIOS) %>% group_by(PROGRAMA.DE.ESTUDIOS) %>% summarize(numero=n())
base_prog <- base_prog[order(-base_prog$numero),]
base_prog$porcentaje <- round(base_prog$numero/sum(base_prog$numero)*100,1)
base_prog2 <- head(base_prog,10)
rbind(base_prog2,c("OTRAS",(sum(base_prog$numero)-sum(base_prog2$numero)),(100-sum(base_prog2$porcentaje))))
#FOR DATES
for(i in 1:length(input$INICIO..DE.BECA)){
input$length_inicio[i] <- nchar(input$INICIO..DE.BECA)[i]
if(input$length_inicio[i]=="8"){
input$anio_inicio[i] <- substring(input$INICIO..DE.BECA[i],5,8)
}else if(input$length_inicio[i]=="9"){
input$anio_inicio[i] <- substring(input$INICIO..DE.BECA[i],6,9)
}
}
for(i in 1:length(input$TÉRMINO.DE.BECA)){
input$length_termino[i] <- nchar(input$TÉRMINO.DE.BECA)[i]
if(input$length_termino[i]=="8"){
input$anio_termino[i] <- substring(input$TÉRMINO.DE.BECA[i],5,8)
}else if(input$length_termino[i]=="9"){
input$anio_termino[i] <- substring(input$TÉRMINO.DE.BECA[i],6,9)
}
}
#CUANTOS ESTUDIANTES SE FUERON POR AÑO
anios = c("2002","2009","2010","2011","2012","2013","2014","2015","2016")
distribucion_anios <- data.frame()
for(i in 1:length(anios)){
a <- nrow(input[ which(input$anio_inicio==anios[[i]]), ]) / length(input$anio_inicio)*100
distribucion_anios <- rbind(distribucion_anios,a)
}
distribucion_anios <- cbind(anios,distribucion_anios)
colnames(distribucion_anios)[2] <- "%_becados"
print(distribucion_anios)
#IMPORTE PROMEDIO EN CADA NIVEL DE ESTUDIOS
nivel <- unique(input$NIVEL.DE.ESTUDIOS)
importe_promedio <- data.frame()
for(i in 1:length(nivel)){
a <- (input[ which(input$NIVEL.DE.ESTUDIOS==nivel[[i]]), ])
b <- mean(a$IMPORTE.PAGADO.DE.ENERO.A.MARZO.20161)
importe_promedio <- rbind(importe_promedio,b)
}
importe_promedio <- cbind(nivel,importe_promedio)
colnames(importe_promedio)[2] <- "importe_pagado"
print(importe_promedio)
# ANIOS DE ESTUDIOS
input$anios_estudio <- (as.numeric(input$anio_termino) - as.numeric(input$anio_inicio))
#ANIOS DE ESTUDIOS
base_anios_est <- input %>% select(PAÍS,anio_inicio,anio_termino,anios_estudio)  %>% group_by(anios_estudio)%>% summarize(numero=n())
base_anios_est <- base_anios_est[order(-base_anios_est$anios_estudio),]
base_anios_est$porcentaje <- base_anios_est$numero/sum(base_anios_est$numero)*100
base_anios_est
#PORCENTAJE DE BECARIOS POR ANIOS DE ESTUDIOS
base_anios_est <- input %>% select(PAÍS,anio_inicio,anio_termino,anios_estudio)  %>% group_by(anios_estudio)%>% summarize(numero=n())
base_anios_est <- base_anios_est[order(-base_anios_est$anios_estudio),]
base_anios_est$porcentaje <- base_anios_est$numero/sum(base_anios_est$numero)*100
print(base_anios_est)
#PORCENTAJE DE BECARIOS POR NIVEL DE ESTUDIOS
base_nivel <- input %>% select(NIVEL.DE.ESTUDIOS) %>% group_by(NIVEL.DE.ESTUDIOS) %>% summarize(numero=n())
base_nivel$porcentaje <- round(base_nivel$numero/sum(base_nivel$numero)*100,1)
print(base_nivel)
#PORCENTAJE DE ALUMNOS ENVIADOS POR ANIO
base_anios_inicio <- input  %>% select(anio_inicio,IMPORTE.PAGADO.DE.ENERO.A.MARZO.20161)  %>% group_by(anio_inicio)%>% summarize(numero=n(),importe_promedio=mean(IMPORTE.PAGADO.DE.ENERO.A.MARZO.20161))
base_anios_inicio$porcentaje <- round(base_anios_inicio$numero/sum(base_anios_inicio$numero)*100,1)
print(base_anios_inicio)
#PORCENTAJE DE ALUMNOS ENVIADOS POR ANIO
base_anios_inicio <- input  %>% select(anio_inicio,IMPORTE.PAGADO.DE.ENERO.A.MARZO.20161)  %>% group_by(anio_inicio)%>% summarize(numero=n(),importe_promedio=mean(IMPORTE.PAGADO.DE.ENERO.A.MARZO.20161))
base_anios_inicio$porcentaje <- round(base_anios_inicio$numero/sum(base_anios_inicio$numero)*100,2)
print(base_anios_inicio)
#PORCENTAJE DE BECARIOS POR GENERO
table(input$GÉNERO)
2274/length(input$GÉNERO) #41.94 genero Femenino
3148/length(input$GÉNERO) #58.06 genero Masculino
table(input$GÉNERO)[1]
table(input$GÉNERO)[1]/length(input$GÉNERO) #41.94 genero Femenino
table(input$GÉNERO)[1]/length(input$GÉNERO) #41.94 genero Femenino
table(input$GÉNERO)[2]length(input$GÉNERO) #58.06 genero Masculino
table(input$GÉNERO)[1]/length(input$GÉNERO) #41.94 genero Femenino
table(input$GÉNERO)[2]/length(input$GÉNERO) #58.06 genero Masculino
#PORCENTAJE DE BECARIOS POR AREA DE CONOCIMIENTO
base_con <- input %>% select(ÁREA.DEL.CONOCIMIENTO)  %>% group_by(ÁREA.DEL.CONOCIMIENTO)%>% summarize(numero=n())
base_con$porcentaje <- round(base_con$numero/sum(base_con$numero)*100,1)
print(base_con)
#PORCENTAJE DE BECARIOS POR AREA DE CONOCIMIENTO
base_con <- input %>% select(ÁREA.DEL.CONOCIMIENTO)  %>% group_by(ÁREA.DEL.CONOCIMIENTO)%>% summarize(numero=n())
base_con$porcentaje <- round(base_con$numero/sum(base_con$numero)*100,2)
print(base_con)
base_fin <- input %>% select(anio_termino)  %>% group_by(anio_termino)%>% summarize(numero=n())
base_fin$porcentaje <- round(base_fin$numero/sum(base_fin$numero)*100,1)
print(base_fin)
#GRAFICAS
ggplot(data = base_pais2) + geom_bar(mapping = aes(x = PAÍS, y = porcentaje, fill=PAÍS), stat = "identity") + coord_flip()+
ggtitle("Principales países") + theme(plot.title = element_text(lineheight=.10, face="bold"))+
labs(x="País",y="Porcentaje")+
theme_bw()+
geom_text(aes(label=porcentaje ,x = PAÍS, y = porcentaje),size=4)+
theme(plot.title = element_text(size = 20, face = "bold"))
ggplot(data = base_inst2) + geom_bar(mapping = aes(x = INSTITUCIÓN, y = porcentaje, fill=INSTITUCIÓN), stat = "identity")+coord_polar()+
ggtitle("Principales instituciones") + theme(plot.title = element_text(lineheight=.10, face="bold"))+
labs(x="Institución",y="Porcentaje")+
theme_bw()+
geom_text(aes(label=porcentaje ,x = INSTITUCIÓN, y = porcentaje),size=4)+
theme(plot.title = element_text(size = 20, face = "bold"))
ggplot(data = base_prog2) + geom_bar(mapping = aes(x = PROGRAMA.DE.ESTUDIOS, y = porcentaje, fill=PROGRAMA.DE.ESTUDIOS), stat = "identity")+
coord_flip()+
ggtitle("Principales programas de estudios") + theme(plot.title = element_text(lineheight=.10, face="bold"))+
labs(x="Programa de estudio",y="Porcentaje")+
theme_bw()+
geom_text(aes(label=porcentaje ,x = PROGRAMA.DE.ESTUDIOS, y = porcentaje),size=4)+
theme(plot.title = element_text(size = 20, face = "bold"))
ggplot(data = base_nivel) + geom_bar(mapping = aes(x = NIVEL.DE.ESTUDIOS, y = porcentaje, fill=NIVEL.DE.ESTUDIOS), stat = "identity")+
ggtitle("Nivel de estudios") + theme(plot.title = element_text(lineheight=.10, face="bold"))+
labs(x="Nivel de estudio",y="Porcentaje")+
theme_bw()+
geom_text(aes(label=porcentaje ,x = NIVEL.DE.ESTUDIOS, y = porcentaje),size=4)+
theme(plot.title = element_text(size = 20, face = "bold"))
ggplot(data = base_anios_inicio) + geom_bar(mapping = aes(x = anio_inicio, y = porcentaje, fill=anio_inicio), stat = "identity")+
ggtitle("Año de inicio de estudios") + theme(plot.title = element_text(lineheight=.10, face="bold"))+
labs(x="Año",y="Porcentaje")+
theme_bw()+
geom_text(aes(label=porcentaje ,x = anio_inicio, y = porcentaje),size=4)+
theme(plot.title = element_text(size = 20, face = "bold"))
ggplot(data = base_fin) + geom_bar(mapping = aes(x = anio_termino, y = porcentaje, fill=anio_termino), stat = "identity")+
ggtitle("Año de termino de estudios") + theme(plot.title = element_text(lineheight=.10, face="bold"))+
labs(x="Año",y="Porcentaje")+
theme_bw()+
geom_text(aes(label=porcentaje ,x = anio_termino, y = porcentaje),size=4)+
theme(plot.title = element_text(size = 20, face = "bold"))
base_anios <- left_join(base_anios_inicio,base_fin, by=c("anio_inicio"="anio_termino"))
base_anios[is.na(base_anios)] <- 0
names(base_anios) <- c("año", "cantidad_inicio", "importe_promedio", "porcentaje_inicio", "cantidad_termino", "porcentaje_termino")
base_anios$cantidad_inicio <- NULL
base_anios$importe_promedio <- NULL
base_anios$cantidad_termino <- NULL
ggplot(data = input, mapping = aes(x = anio_inicio, fill = anio_termino)) +
geom_bar(position = "identity")+
ggtitle("Año de inicio y termino de estudios") + theme(plot.title = element_text(lineheight=.10, face="bold"))+
labs(x="Año de inicio",y="Conteo")+
theme_bw()+
theme(plot.title = element_text(size = 20, face = "bold"))
ggplot(data = base_con) + geom_bar(mapping = aes(x = ÁREA.DEL.CONOCIMIENTO, y = porcentaje, fill=ÁREA.DEL.CONOCIMIENTO), stat = "identity")+coord_polar()+
ggtitle("Principales áreas de conocimiento") + theme(plot.title = element_text(lineheight=.10, face="bold"))+
labs(x="Área",y="Porcentaje")+
theme_bw()+
geom_text(aes(label=porcentaje ,x = ÁREA.DEL.CONOCIMIENTO, y = porcentaje),size=4)+
theme(plot.title = element_text(size = 20, face = "bold"))
length(unique(input$PAÍS))
library(rworldmap)
codes$PAIS <- NULL
codes$numero <- NULL
codes$NAME <- NULL
names(codes) <- c("Porcentaje", "ISO3")
mapDevice('x11')
spdf <- joinCountryData2Map(codes, joinCode="ISO3", nameJoinColumn="ISO3")
library(rworldmap)
install.packages("rworldmap")
library(rworldmap)
codes$PAIS <- NULL
codes$numero <- NULL
codes$NAME <- NULL
names(codes) <- c("Porcentaje", "ISO3")
mapDevice('x11')
spdf <- joinCountryData2Map(codes, joinCode="ISO3", nameJoinColumn="ISO3")
mapCountryData(spdf, nameColumnToPlot="Porcentaje", catMethod="fixedWidth", colourPalette = "terrain")
?(spdf, nameColumnToPlot="Porcentaje", catMethod="fixedWidth", colourPalette = "terrain")
?(spdf, nameColumnToPlot="Porcentaje", catMethod="fixedWidth", colourPalette = "terrain")
?mapCountryData
#create a map-shaped window
mapDevice('x11')
#join to a coarse resolution map
spdf <- joinCountryData2Map(codes, joinCode="ISO3", nameJoinColumn="ISO3")
mapCountryData(spdf, nameColumnToPlot="Porcentaje", catMethod="fixedWidth", colourPalette = "white2Black")
###############
input2 <- input
input2$CONSEC. <- NULL
input2$NOMBRE.BECARIO <- NULL
input2$INICIO..DE.BECA <- NULL
input2$TÉRMINO.DE.BECA <- NULL
input2$NIVEL.DE.ESTUDIOS <- NULL
input2$IMPORTE.PAGADO.DE.ENERO.A.MARZO.20161 <- NULL
head(input2)
input2$newcol <- do.call(paste, c(input2[c("INSTITUCIÓN","PAÍS")], sep = " "))
input3 <- subset(input2, select=c(3,6))
head(input3)
input4 <- sample_n(input3, 600)
head(input4)
input2
head(input2)
rm(input4)
head(input)
areas <- unique(input$ÁREA.DEL.CONOCIMIENTO)
areas
i <- 1
input[ which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ])
input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
for(i in 1:length(areas)){
#write.table(input,"/home/denny/proyectos/fuga_de_cerebros/base_nueva.txt",sep="\t",row.names=FALSE, col.names = FALSE)
a <- input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
write.table(a,c("/home/denny/proyectos/fuga_de_cerebros/",i),sep="\t",row.names=FALSE, col.names = FALSE)
}
i <- 1
c("/home/denny/proyectos/fuga_de_cerebros/",i)
paste("/home/denny/proyectos/fuga_de_cerebros/",i,sep="")
paste("/home/denny/proyectos/fuga_de_cerebros/",areas[[i]],sep="")
#ENTREGABLE SEPARAR BASE POR AREAS DE ESTUDIO
areas <- unique(input$ÁREA.DEL.CONOCIMIENTO)
for(i in 1:length(areas)){
#write.table(input,"/home/denny/proyectos/fuga_de_cerebros/base_nueva.txt",sep="\t",row.names=FALSE, col.names = FALSE)
a <- input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
write.table(a,paste("/home/denny/proyectos/fuga_de_cerebros/",areas[[i]],sep=""),sep="\t",row.names=FALSE, col.names = FALSE)
}
#ENTREGABLE SEPARAR BASE POR AREAS DE ESTUDIO
areas <- unique(input$ÁREA.DEL.CONOCIMIENTO)
for(i in 1:length(areas)){
#write.table(input,"/home/denny/proyectos/fuga_de_cerebros/base_nueva.txt",sep="\t",row.names=FALSE, col.names = FALSE)
a <- input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
write.table(a,paste("/home/denny/proyectos/fuga_de_cerebros/Entregables",areas[[i]],sep=""),sep="\t",row.names=FALSE, col.names = FALSE)
}
areas <- unique(input$ÁREA.DEL.CONOCIMIENTO)
for(i in 1:length(areas)){
#write.table(input,"/home/denny/proyectos/fuga_de_cerebros/base_nueva.txt",sep="\t",row.names=FALSE, col.names = FALSE)
a <- input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
write.table(a,paste("/home/denny/proyectos/fuga_de_cerebros/Entregables/",areas[[i]],sep=""),sep="\t",row.names=FALSE, col.names = FALSE)
}
#ENTREGABLE SEPARAR BASE POR AREAS DE ESTUDIO
areas <- unique(input$ÁREA.DEL.CONOCIMIENTO)
for(i in 1:length(areas)){
#write.table(input,"/home/denny/proyectos/fuga_de_cerebros/base_nueva.txt",sep="\t",row.names=FALSE, col.names = FALSE)
a <- input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
write.table(a,paste("/home/denny/proyectos/fuga_de_cerebros/Entregables/",areas[[i]],sep=""),sep="\t",row.names=FALSE, col.names = TRUE)
}
View(codes)
View(input2)
names(input)
i <- 1
input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
a <- input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
a <- a[1:11]
names(a)
#ENTREGABLE SEPARAR BASE POR AREAS DE ESTUDIO
areas <- unique(input$ÁREA.DEL.CONOCIMIENTO)
for(i in 1:length(areas)){
#write.table(input,"/home/denny/proyectos/fuga_de_cerebros/base_nueva.txt",sep="\t",row.names=FALSE, col.names = FALSE)
a <- input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
a <- a[1:11]
write.table(a,paste("/home/denny/proyectos/fuga_de_cerebros/Entregables/",areas[[i]],sep=""),sep="\t",row.names=FALSE, col.names = TRUE)
}
names(input)
?write.table
Sys.getlocale()
=write.table()
?write.table()
for(i in 1:length(areas)){
#write.table(input,"/home/denny/proyectos/fuga_de_cerebros/base_nueva.txt",sep="\t",row.names=FALSE, col.names = FALSE)
a <- input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
a <- a[1:11]
write.table(a,paste("/home/denny/proyectos/fuga_de_cerebros/Entregables/",areas[[i]],sep=""),sep="\t",row.names=FALSE, col.names = TRUE, fileEncoding="string")
}
#ENTREGABLE SEPARAR BASE POR AREAS DE ESTUDIO
areas <- unique(input$ÁREA.DEL.CONOCIMIENTO)
for(i in 1:length(areas)){
#write.table(input,"/home/denny/proyectos/fuga_de_cerebros/base_nueva.txt",sep="\t",row.names=FALSE, col.names = FALSE)
a <- input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
a <- a[1:11]
write.table(a,paste("/home/denny/proyectos/fuga_de_cerebros/Entregables/",areas[[i]],sep=""),sep="\t",row.names=FALSE, col.names = TRUE, fileEncoding='UTF-8')
}
#ENTREGABLE SEPARAR BASE POR AREAS DE ESTUDIO
areas <- unique(input$ÁREA.DEL.CONOCIMIENTO)
for(i in 1:length(areas)){
#write.table(input,"/home/denny/proyectos/fuga_de_cerebros/base_nueva.txt",sep="\t",row.names=FALSE, col.names = FALSE)
a <- input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
a <- a[1:11]
write.table(a,paste("/home/denny/proyectos/fuga_de_cerebros/Entregables/",areas[[i]],sep=""),sep="\t",row.names=FALSE, col.names = TRUE, fileEncoding='UTF-16')
}
areas <- unique(input$ÁREA.DEL.CONOCIMIENTO)
for(i in 1:length(areas)){
#write.table(input,"/home/denny/proyectos/fuga_de_cerebros/base_nueva.txt",sep="\t",row.names=FALSE, col.names = FALSE)
a <- input[which(input$ÁREA.DEL.CONOCIMIENTO==areas[[i]]), ]
a <- a[1:11]
write.table(a,paste("/home/denny/proyectos/fuga_de_cerebros/Entregables/",areas[[i]],sep=""),sep="\t",row.names=FALSE, col.names = TRUE, fileEncoding='UTF-8')
}
View(codes)
wdir<-""
wdir<-"/home/denny/github/regresion-avanzada/codigo/m1-4"
setwd(wdir)
library(R2OpenBUGS)
library(dplyr)
library(readr)
library(R2jags)
library(R2OpenBUGS)
library(dplyr)
library(readr)
library(R2jags)
prob<-function(x){
out<-min(length(x[x>0])/length(x),length(x[x<0])/length(x))
out
}
tabla_4anios_ok <- read.csv("../../datos/tabla_4anios_naive.csv")
tabla_4anios_ok$POR_VPH_PISODT <- ifelse(tabla_4anios_ok$VIVPAR_HAB==0,0,tabla_4anios_ok$VPH_PISODT/tabla_4anios_ok$VIVPAR_HAB)
tabla_4anios_ok$POR_VPH_AUTOM <- ifelse(tabla_4anios_ok$VIVPAR_HAB==0,0,tabla_4anios_ok$VPH_AUTOM/tabla_4anios_ok$VIVPAR_HAB)
tabla <- tabla_4anios_ok
variables <- c("homi_count","POBTOT","PROM_OCUP","POR_VPH_PISODT","POR_VPH_AUTOM")
datos <- tabla %>% select(one_of(variables))
n <- nrow(datos)*1
unos <- rep(1,n)
data<-list("n"=n,"y"=datos$homi_count,"exposure"=datos$POBTOT,"x1"= datos$POR_VPH_AUTOM,"x2"=datos$PROM_OCUP,"z1"=datos$POR_VPH_AUTOM, "z2"=datos$PROM_OCUP)
inits<-function(){list(beta=rep(1,3),gamma=rep(1,3),ypred=rep(1,n))}
parameters<-c("beta","gamma","ypred")
zip_1_4.sim<-bugs(data,inits,parameters,model.file="ZIPoisson_1-4.txt",
n.iter=50000,n.chains=1,n.burnin=5000)
out_zip_1_4.sim<-zip_1_4.sim$sims.list
traceplot(zip_1_4.sim)
plot(zip_1_4.sim)
out.sum_zip_1_4.sim <- zip_1_4.sim$summary
head(out.sum_zip_1_4.sim)
write.csv(out.sum_zip_1_4.sim,"out.sum_zip_1_4.sim.csv")
zip_1_4.sim.dic<-zip_1_4.sim$DIC
print(zip_1_4.sim.dic) #8.4e+11
out.ypred<-out.sum_zip_1_4.sim [grep("ypred",rownames(out.sum_zip_1_4.sim )),]
cor(datos$homi_count,out.ypred[,1])
beta_num <- 1
z<-out_zip_1_4.sim$beta[,beta_num]
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
prob(z) #0
beta_num <- 2
z<-out_zip_1_4.sim$beta[,beta_num]
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
prob(z) #0
beta_num <- 1
z<-out_zip_1_4.sim$beta[,beta_num]
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
prob(z) #0
beta_num <- 2
z<-out_zip_1_4.sim$beta[,beta_num]
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
prob(z) #0
beta_num <- 3
z<-out_zip_1_4.sim$beta[,beta_num]
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
prob(z) #0
gamma_num <- 1
z<-out_zip_1_4.sim$gamma[,gamma_num]
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
prob(z) #
gamma_num <- 2
z<-out_zip_1_4.sim$gamma[,gamma_num]
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
prob(z) #
gamma_num <- 3
z<-out_zip_1_4.sim$gamma[,gamma_num]
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
prob(z) #
out.ypred<-out.ypred<-out.sum_zip_1_4.sim [grep("ypred",rownames(out.sum_zip_1_4.sim )),]
or<-order(datos$POR_VPH_AUTOM)
ymin<-min(datos$homi_count,out.ypred[,c(1,3,7)])
ymax<-max(datos$homi_count,out.ypred[,c(1,3,7)])
par(mfrow=c(1,1))
plot(datos$POR_VPH_AUTOM,datos$homi_count,ylim=c(ymin,ymax))
lines(datos$POR_VPH_AUTOM[or],out.ypred[or,1],lwd=2,col=2)
lines(datos$POR_VPH_AUTOM[or],out.ypred[or,3],lty=2,col=3)
lines(datos$POR_VPH_AUTOM[or],out.ypred[or,7],lty=2,col=3)
out.ypred<-out.ypred<-out.sum_zip_1_4.sim [grep("ypred",rownames(out.sum_zip_1_4.sim )),]
or<-order(datos$PROM_OCUP)
ymin<-min(datos$homi_count,out.ypred[,c(1,3,7)])
ymax<-max(datos$homi_count,out.ypred[,c(1,3,7)])
par(mfrow=c(1,1))
plot(datos$PROM_OCUP,datos$homi_count,ylim=c(ymin,ymax))
lines(datos$PROM_OCUP[or],out.ypred[or,1],lwd=2,col=2)
lines(datos$PROM_OCUP[or],out.ypred[or,3],lty=2,col=3)
lines(datos$PROM_OCUP[or],out.ypred[or,7],lty=2,col=3)
plot(datos$homi_count,out.ypred[,1])
wdir<-""
wdir<-"/home/denny/github/regresion-avanzada/codigo/m1-5"
setwd(wdir)
library(R2OpenBUGS)
library(dplyr)
library(readr)
library(R2jags)
prob<-function(x){
out<-min(length(x[x>0])/length(x),length(x[x<0])/length(x))
out
}
tabla_4anios_ok <- read.csv("../../datos/tabla_4anios_mods.csv")
tabla_4anios_mods$POR_VPH_PISODT <- ifelse(tabla_4anios_mods$VIVPAR_HAB==0,0,tabla_4anios_mods$VPH_PISODT/tabla_4anios_mods$VIVPAR_HAB)
tabla_4anios_mods <- read.csv("../../datos/tabla_4anios_mods.csv")
head(tabla_4anios_mods)
variables <- c("homi_count","POBTOT","PROM_OCUP","POR_VPH_PISODT","POR_VPH_AUTOM","bin_af", "bin_ab")
datos <- tabla %>% select(one_of(variables))
n <- nrow(datos)*1
unos <- rep(1,n)
#Transformamos las variables explicativas en %
########### El ifelse checa si el denominador es 0 y en ese caso pone 0 a la proporción
tabla_4anios_mods$POR_VPH_PISODT <- ifelse(tabla_4anios_mods$VIVPAR_HAB==0,0,tabla_4anios_mods$VPH_PISODT/tabla_4anios_mods$VIVPAR_HAB)
tabla_4anios_mods$POR_VPH_AUTOM <- ifelse(tabla_4anios_mods$VIVPAR_HAB==0,0,tabla_4anios_mods$VPH_AUTOM/tabla_4anios_mods$VIVPAR_HAB)
tabla <- tabla_4anios_mods
variables <- c("homi_count","POBTOT","PROM_OCUP","POR_VPH_PISODT","POR_VPH_AUTOM","bin_af", "bin_ab")
datos <- tabla %>% select(one_of(variables))
n <- nrow(datos)*1
unos <- rep(1,n)
#Transformamos las variables explicativas en %
########### El ifelse checa si el denominador es 0 y en ese caso pone 0 a la proporción
tabla_4anios_mods$POR_VPH_PISODT <- ifelse(tabla_4anios_mods$VIVPAR_HAB==0,0,tabla_4anios_mods$VPH_PISODT/tabla_4anios_mods$VIVPAR_HAB)
tabla_4anios_mods$POR_VPH_AUTOM <- ifelse(tabla_4anios_mods$VIVPAR_HAB==0,0,tabla_4anios_mods$VPH_AUTOM/tabla_4anios_mods$VIVPAR_HAB)
tabla <- tabla_4anios_mods
variables <- c("homi_count","POBTOT","PROM_OCUP","POR_VPH_PISODT","POR_VPH_AUTOM","bin_af", "bin_ab")
datos <- tabla %>% select(one_of(variables))
#-Defining data-
n <- nrow(datos)*1
unos <- rep(1,n)
#poisson y bin neg - exposure es el offset de POP_TOT
data<-list("n"=n,"y"=datos$homi_count,"exposure"=datos$POBTOT,"x1"= datos$POR_VPH_AUTOM, "x2"=datos$bin_ab, "x3"=datos$bin_af,
"x4"=(datos$POR_VPH_AUTOM*datos$bin_ab),"x5"=(datos$POR_VPH_AUTOM*datos$bin_af),"z1"=datos$bin_ab, "z2"=datos$bin_af)
#-Defining inits-
inits<-function(){list(beta=rep(1,6),gamma=rep(1,3),ypred=rep(1,n))}
#-Selecting parameters to monitor-
parameters<-c("beta","gamma","ypred")
#-Running code-
#OpenBUGS
zip_1_4.sim<-bugs(data,inits,parameters,model.file="ZIPoisson_1-5.txt",
n.iter=10,n.chains=1,n.burnin=2)
zip_1_5.sim<-bugs(data,inits,parameters,model.file="ZIPoisson_1-5.txt",
n.iter=50000,n.chains=1,n.burnin=5000)
